{"version":3,"file":"editor.js","sources":["../../../src/editor.tsx"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { useBlockProps, InnerBlocks, RichText } from \"@wordpress/block-editor\";\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport { BlockEditProps } from \"wordpress__blocks\";\n\nimport EditorsHelper from \"../lib/ReactEditor\";\n/**\n * Create the Edit Mode rendering of the Reactable Synthethics Chatbox Custom BLock Type\n * @param props - saved as hard-coded string like attributes used for both editing and rendering.\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n *\n */\n\nexport function Edit(\n  props: BlockEditProps<{\n    title?: string;\n    blockId?: string;\n  }>\n) {\n  const React = window.React;\n\n  const { attributes, setAttributes } = props;\n  if (!attributes.blockId || attributes.blockId !== props.clientId) {\n    setAttributes({ blockId: props.clientId });\n  }\n  const blockProps = useBlockProps({\n    className: \"wp-block-liulock-synthethics\",\n  });\n  const innerBlockProps = useBlockProps({\n    className: \"wp-block-liulock-synthethics\",\n  });\n  return (\n    <div {...blockProps}>\n      <div className=\"flexbox\">\n        <div className=\"chat-box\">\n          <div className=\"chat-box-header\">\n            <RichText\n              value={attributes.title || \"\"}\n              placeholder=\"Enter a title for chatbox\"\n              tagName=\"h3\"\n              onChange={(val: string) => setAttributes({ title: val })}\n            />\n\n            <InnerBlocks {...innerBlockProps} />\n          </div>\n          <div\n            className=\"wp-liusynthethics-reacted-chatbox\"\n            id={`editor-${attributes.blockId}`}\n          >\n            <EditorsHelper />\n          </div>\n          <script></script>\n          <script></script>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["Edit","props","React","window","attributes","setAttributes","blockId","clientId","blockProps","useBlockProps","className","innerBlockProps","createElement","RichText","value","title","placeholder","tagName","onChange","val","InnerBlocks","__assign","id","concat","EditorsHelper"],"mappings":"0LA+BM,SAAUA,EACdC,GAKA,IAAMC,EAAQC,OAAOD,MAEbE,EAA8BH,EAAKG,WAAvBC,EAAkBJ,EAAKI,cACtCD,EAAWE,SAAWF,EAAWE,UAAYL,EAAMM,UACtDF,EAAc,CAAEC,QAASL,EAAMM,WAEjC,IAAMC,EAAaC,EAAc,CAC/BC,UAAW,iCAEPC,EAAkBF,EAAc,CACpCC,UAAW,iCAEb,OACER,2BAASM,GACPN,EAAKU,cAAA,MAAA,CAAAF,UAAU,WACbR,EAAKU,cAAA,MAAA,CAAAF,UAAU,YACbR,EAAKU,cAAA,MAAA,CAAAF,UAAU,mBACbR,EAAAU,cAACC,EAAQ,CACPC,MAAOV,EAAWW,OAAS,GAC3BC,YAAY,4BACZC,QAAQ,KACRC,SAAU,SAACC,GAAgB,OAAAd,EAAc,CAAEU,MAAOI,GAAvB,IAG7BjB,EAAAU,cAACQ,EAAWC,EAAA,CAAA,EAAKV,KAEnBT,EACEU,cAAA,MAAA,CAAAF,UAAU,oCACVY,GAAI,UAAUC,OAAAnB,EAAWE,UAEzBJ,EAACU,cAAAY,SAEHtB,EAAiBU,cAAA,SAAA,MACjBV,EAAAU,cAAA,SAAA,QAKV"}